"use strict";var EventDrivenPlugin;EventDrivenPlugin=function(){var gamePlayInstance;this.handleEvent=function(eventName,eventData){throw new Error('Not implemented yet.');};this.getObservedEvents=function(){throw new Error('Not implemented yet.');};this.sendEvent=function(eventName,eventData){gamePlayInstance.sendEvent(eventName,eventData);};this.setGamePlay=function(gamePlay){gamePlayInstance=gamePlay;};};"use strict";var ScheduledPlugin;ScheduledPlugin=function(){var gamePlayInstance;this.handleTick=function(){throw new Error('Not implemented yet.');};this.ignoresExtraTicks=function(){return false;};this.sendEvent=function(eventName,eventData){gamePlayInstance.sendEvent(eventName,eventData);};this.setGamePlay=function(gamePlay){gamePlayInstance=gamePlay;};};"use strict";var MixedPlugin;MixedPlugin=function(){var gamePlayInstance;this.handleEvent=function(eventName,eventData){throw new Error('Not implemented yet.');};this.getObservedEvents=function(){throw new Error('Not implemented yet.');};this.sendEvent=function(eventName,eventData){gamePlayInstance.sendEvent(eventName,eventData);};this.setGamePlay=function(gamePlay){gamePlayInstance=gamePlay;MixedPlugin.prototype.setGamePlay(gamePlay);};};MixedPlugin.prototype=new ScheduledPlugin();"use strict";var Music;Music=function(){var playlist,playing,current,prepareSong,defaultContainer,volume,instance,loop,observers,notifyObservers;playlist=[];playing=false;current=0;defaultContainer=document.body;volume=1;instance=this;loop=true;observers=[];this.play=function(){if(!playlist.length){throw new Error('Cannot play empty playlist');}
playlist[current].audio.play();playing=true;};this.pause=function(){if(!playlist.length){throw new Error('Cannot play empty playlist');}
playlist[current].audio.pause();playing=false;};this.stop=function(){if(!playlist.length){throw new Error('Cannot play empty playlist');}
playlist[current].audio.stop();playing=false;};this.next=function(){if(!playlist.length){throw new Error('cannot skip to next song of empty playlist');}
this.stop();if(loop||((current+1)<playlist.length)){current=(current+1)%playlist.length;this.play();}};this.previous=function(){if(!playlist.length){throw new Error('Cannot play empty playlist');}
this.stop();if(loop||current){current?--current:(current=playlist.length-1);this.play();}}
this.isPlaying=function(){return playing;};this.getCurrentTrack=function(){return current;};this.getCurrentTime=function(){return playlist[current].audio.getCurrentTime();};this.setLoop=function(newLoop){loop=newLoop;}
this.getLoop=function(){return loop;};this.fadeToSong=function(next,speed,way){var start,interval;if(!playlist[next]){throw new Error('song of this index is not in playlist');}
if(next==current){throw new Error('cannot fade to the same song');}
if(!(way instanceof Function)){way=function(x){return x;};}
if(!speed){speed=0.5;}
speed*=1000;start=(new Date()).getTime();playlist[next].audio.setVolume(0);playlist[next].audio.play();interval=setInterval(function(){var offset;offset=(new Date()).getTime()-start;offset=offset>speed?speed:offset;offset=way(offset/speed);playlist[current].audio.setVolume(volume*(1-offset));playlist[next].audio.setVolume(volume*offset);if(offset>=1){playlist[current].audio.stop();clearInterval(interval);current=next;}},10);};this.setPlaylist=function(newPlaylist){var i;if(!(newPlaylist instanceof Array)){throw new Error('Playlist has to be an array');}
playlist=newPlaylist;for(i=playlist.length;i--;){prepareSong(playlist[i]);}};this.appendSong=function(song){prepareSong(song);playlist.push(song);};this.setContainer=function(container){defaultContainer=container;};this.setVolume=function(newVolume){var i;volume=newVolume;for(i=playlist.length;i--;){playlist[i].audio.setVolume(volume);}};this.addLoadingObserver=function(observer){if(!(observer instanceof Function)){throw new Error('observer has to be a function');}
observers.push(observer);};notifyObservers=function(){var i,count;count=0;for(i=playlist.length;i--;){count+=playlist[i].loaded?1:0;}
count/=playlist.length;for(i=observers.length;i--;){observers[i](count);}};prepareSong=function(song){song.loaded=false;song.audio=new Audio(song.src,{duration:song.duration,container:defaultContainer,volume:volume,onload:function(){song.loaded=true;notifyObservers();},onended:function(){instance.next();}});};};"use strict";var GameMusic;GameMusic=function(){var playlists,fadeDuration,intensity,song,volume,songDurations,loadedSongs,loaded,loadingObservers,playing,crossFadeTimeout,crossFading,crossFadeQueue;function findIntensity(wantedIntensity){var playlistIntensity,bestIntensity;bestIntensity=0;for(playlistIntensity in playlists){if(!playlists.hasOwnProperty(playlistIntensity)){continue;}
if(Math.abs(wantedIntensity-playlistIntensity)<Math.abs(wantedIntensity-bestIntensity)){bestIntensity=playlistIntensity;}}
return bestIntensity;}
function prepareSongCrossFade(nextIntensity,nextSong,now,continious){var interval,i;if(crossFading){crossFadeQueue.push({intensity:nextIntensity,song:nextSong,now:true,continious:continious});return;}
crossFadeTimeout&&clearTimeout(crossFadeTimeout);crossFadeTimeout=setTimeout(function(){var start,nextFade;crossFading=true;start=(new Date()).getTime();playlists[nextIntensity][nextSong].setVolume(0);playlists[nextIntensity][nextSong].play();interval=setInterval(function(){var current,progress;current=(new Date()).getTime();progress=(current-start)/fadeDuration;if(progress<=1){playlists[intensity][song].setVolume((1-progress)*volume);playlists[nextIntensity][nextSong].setVolume(progress*volume);}else{clearInterval(interval);playlists[intensity][song].stop();intensity=nextIntensity;song=nextSong;crossFading=false;crossFadeQueue.push({intensity:intensity,song:(song+1)%playlists[intensity].length,now:false,continious:true});nextFade=crossFadeQueue.shift();prepareSongCrossFade(nextFade.intensity,nextFade.song,nextFade.now,nextFade.continious);}},10);crossFadeTimeout=null;},now?1:(songDurations[intensity][song]*1000-
(continious?2*fadeDuration:fadeDuration)));}
this.play=function(){var interval,startTime;if(playing){throw new Error('GameMusic: Already playing music');}
song=Math.floor(Math.random()*playlists[intensity].length);playlists[intensity][song].setVolume(0);playlists[intensity][song].play();startTime=(new Date()).getTime();interval=setInterval(function(){var now;now=(new Date()).getTime();if(now-startTime<fadeDuration){playlists[intensity][song].setVolume((now-startTime)/fadeDuration*volume);}else{playlists[intensity][song].setVolume(volume);clearInterval(interval);}},10);playing=true;prepareSongCrossFade(intensity,(song+1)%playlists[intensity].length,false,false);};this.stop=function(){var interval,startTime;if(!playing){throw new Error('GameMusic: The music is not playing');}
crossFadeTimeout&&clearTimeout(crossFadeTimeout);startTime=(new Date()).getTime();interval=setInterval(function(){var now;now=(new Date()).getTime();if(now-startTime<fadeDuration){playlists[intensity][song].setVolume((1-(now-startTime)/fadeDuration)*volume);}else{playlists[intensity][song].stop();clearInterval(interval);playing=false;}},10);};this.setIntensity=function(newIntensity){var i;if((newIntensity<0)||(newIntensity>1)){throw new Error('GameMusic: The intensity must be within range [0, 1]');}
newIntensity=findIntensity(newIntensity);if(newIntensity==intensity){return;}
if(playing){crossFadeQueue=[];prepareSongCrossFade(newIntensity,Math.floor(Math.random()*playlists[newIntensity].length),true,false);}else{intensity=newIntensity;}};this.registerLoadingObserver=function(observer){if(loaded){observer(1);return;}
loadingObservers.push(observer);};playlists=Settings.gameMusic.playlists;fadeDuration=Settings.gameMusic.fadeDuration;volume=Settings.gameMusic.volume;intensity=findIntensity(0);loadedSongs={};songDurations={};loaded=false;loadingObservers=[];playing=false;crossFadeQueue=[];(function(){var playlistIntensity,playlist,i;function loadingCallback(){var songCount,loadedCount,playlistIntensity;songCount=0;loadedCount=0;for(playlistIntensity in playlists){if(!playlists.hasOwnProperty(playlistIntensity)){continue;}
songCount+=playlists[playlistIntensity].length;playlists[playlistIntensity].forEach(function(loaded){loaded&&loadedCount++;});}
loadingObservers.forEach(function(observer){observer(loadedCount/songCount);});loaded=loadedCount==songCount;}
for(playlistIntensity in playlists){if(!playlists.hasOwnProperty(playlistIntensity)){continue;}
playlist=playlists[playlistIntensity];loadedSongs[playlistIntensity]=[];songDurations[playlistIntensity]=[];for(i=playlist.length;i--;){loadedSongs[playlistIntensity][i]=false;songDurations[playlistIntensity][i]=playlist[i].duration;(function(intensityIndex,songIndex){playlist[i]=new Audio(playlist[i].src,{volume:volume,onload:function(){loadedSongs[intensityIndex][songIndex]=true;loadingCallback();}});}(playlistIntensity,i));}}}());};"use strict";(function(){var Audio,defaultContainer,getExtension,createAudio;defaultContainer=false;getExtension=function(path){return path.substring(path.lastIndexOf('.')+1).toLowerCase();};createAudio=function(src,options){var audio,source,i;if(typeof src=='string'){src=[src];}
audio=document.createElement('audio');audio.volume=options.volume!==undefined?options.volume:1;audio.setAttribute('preload','auto');if(options.controls){audio.setAttribute('controls','controls');}
audio.autobuffer=true;if(options.loop){audio.loop=true;}
for(i=src.length;i--;){source=document.createElement('source');source.setAttribute('type','audio/'+
(getExtension[src[i]]=='ogg'?'ogg':'mpeg'));source.setAttribute('src',src[i]);audio.appendChild(source);}
audio.load();return audio;};Audio=function(src,options){var audio,i,runOnEnded,container,duration,playOffset,playStart,instance;instance=this;if(!defaultContainer){defaultContainer=document.body;}
container=options.container?options.container:defaultContainer;audio=createAudio(src,options);if(options.onload instanceof Function){i=setInterval(function(){if(audio.readyState==4){clearInterval(i);options.onload();}},10);}
duration=options.duration;playOffset=0;runOnEnded=false;if(options.onended instanceof Function){if(!duration){throw new Error('Cannot use onended without duration info');}
setInterval(function(){if(!runOnEnded&&(instance.getCurrentTime()>=duration)){runOnEnded=true;instance.stop();options.onended();}},10);}
this.isLoaded=function(){return audio.readyState==4;};this.play=function(){audio.play();playStart=(new Date()).getTime();runOnEnded=false;};this.pause=function(){audio.pause();playOffset+=((new Date()).getTime()-playStart)/1000;};this.stop=function(){audio.pause();playOffset=0;audio.parentNode.removeChild(audio);audio=createAudio(src,options);container.appendChild(audio);};this.playFromStart=function(){this.stop();this.play();};this.isPaused=function(){return audio.paused;};this.getCurrentTime=function(){if(!duration){throw new Error('cannot determine current time without duration info');}
return playOffset+(this.isPaused()?0:((new Date()).getTime()-playStart)/1000);};this.getVolume=function(){return audio.volume;};this.setVolume=function(volume){audio.volume=volume;};container.appendChild(audio);};Audio.setDefaultContainer=function(container){defaultContainer=container;};window.Audio=Audio;}());"use strict";var Unit;(function(){var id,units;id=0;units=[];Unit=function(x,y,direction,type,player,color){var definition;definition=UnitsDefinition.getType(type);this.id=id++;this.x=x;this.y=y;this.lastX=x;this.lastY=y;this.direction=direction;this.type=type;this.image=definition.image;this.speed=definition.speed;this.turnSpeed=definition.turnSpeed;this.action=0;this.player=player;this.colorify=definition.colorify;this.colorifyDistance=definition.colorifyDistance;this.race=definition.race;this.moveOffset=0;this.moveOffsetX=0;this.moveOffsetY=0;this.color=color===undefined?Player.getPlayer(player).color:color;this.move=function(distance){var lastX,lastY;lastX=this.x;lastY=this.y;if(distance>1){this.move(distance-1);}
this.lastX=lastX;this.lastY=lastY;switch(this.direction){case 0:this.y-=2;break;case 1:this.x+=this.y%2;this.y-=1;break;case 2:this.x+=1;break;case 3:this.x+=this.y%2;this.y+=1;break;case 4:this.y+=2;break;case 5:this.x-=1-(this.y%2);this.y+=1;break;case 6:this.x-=1;break;case 7:this.x-=1-(this.y%2);this.y-=1;break;}
this.action=2;};this.setMoveOffset=function(offset){this.moveOffset=offset;if((this.direction>=1)&&(this.direction<=3)){this.moveOffsetX=Settings.tileWidth*offset*(this.direction==2?1:0.5);}
if(this.direction>=5){this.moveOffsetX=-Settings.tileWidth*offset*(this.direction==6?1:0.5);}
if((this.direction==7)||(this.direction<=1)){this.moveOffsetY=-Settings.tileHeight*offset*(this.direction==0?1:0.5);}
if((this.direction>=3)&&(this.direction<=5)){this.moveOffsetY=Settings.tileHeight*offset*(this.direction==4?1:0.5);}};this.exportData=function(){return{x:this.x,y:this.y,direction:this.direction,type:this.type,player:this.player};};units.push(this);};Unit.getUnit=function(id){return units[id];};Unit.importData=function(data){return new Unit(data.x,data.y,data.direction,data.type,data.player);};}());"use strict";var Tile;Tile=function(type){var definition;definition=TilesDefinition.getType(type);this.type=type;this.image=definition.image;this.accessible=definition.accessible;this.minimap=definition.minimap;this.resource=definition.resource;this.lightSfx=0;this.exportData=function(){return{type:this.type,lightSfx:this.lightSfx};};};Tile.importData=function(data){var tile;tile=new Tile(data.type);tile.lightSfx=data.lightSfx;return tile;};"use strict";var Settings;Settings={tileSize:undefined,heightScale:undefined,tileWidth:undefined,tileHeight:undefined,gridIndexGranularity:undefined,tileImagesTransformed:false,buildingImagesTransformed:false,unitImagesTransformed:false,sfx3DLightFactor:undefined,sfx3DLightColor:undefined,sfxBuildLayerColor:undefined,sfxAccessibleTileColor:undefined,sfxInaccessibleTileColor:undefined,mouseWheelSpeed:undefined,loadingMusic:[],loadingMusicVolume:1,loadingMusicLength:undefined,gameMusic:{playlists:{0:[]},fadeDuration:3500,volume:0.7},tickDuration:30,maxTicks:3,gamePlayPlugins:[],pluginConfiguration:{},load:function(settings){this.tileSize=settings.tileSize;this.heightScale=settings.heightScale;this.tileWidth=this.tileSize*Math.cos(Math.PI/4)*2;this.tileHeight=this.tileSize*Math.sin(Math.PI/4)*2*this.heightScale;this.gridIndexGranularity=settings.gridIndexGranularity;if(settings.tileImagesTransformed!==undefined){this.tileImagesTransformed=settings.tileImagesTransformed;}
if(settings.buildingImagesTransformed!==undefined){this.buildingImagesTransformed=settings.buildingImagesTransformed;}
if(settings.unitImagesTransformed!==undefined){this.unitImagesTransformed=settings.unitImagesTransformed;}
this.sfx3DLightFactor=settings.sfx3DLightFactor;this.sfx3DLightColor=settings.sfx3DLightColor;this.sfxBuildLayerColor=settings.sfxBuildLayerColor;this.sfxAccessibleTileColor=settings.sfxAccessibleTileColor;this.sfxInaccessibleTileColor=settings.sfxInaccessibleTileColor;this.mouseWheelSpeed=settings.mouseWheelSpeed;this.loadingMusic=settings.loadingMusic;this.loadingMusicVolume=settings.loadingMusicVolume;this.loadingMusicLength=settings.loadingMusicLength;this.gameMusic=settings.gameMusic;this.gamePlayPlugins=settings.gamePlayPlugins;this.pluginConfiguration=settings.pluginConfiguration;}};"use strict";var Race;Race=function(id,name,signatureColor){this.id=id;this.name=name;this.signatureColor=signatureColor;};"use strict";var Player;(function(){var id,players;id=0;players=[];Player=function(type,isHuman,name,resources,color,race){type=PlayersDefinition.getType(type);this.id=id++;this.color=color||type.color;this.isHuman=isHuman;this.name=name;this.resources=resources;this.race=race||type.race;players.push(this);};Player.getPlayer=function(id){return players[id];};Player.createGenericPlayers=function(){var i;if(players.length){return;}
for(i=0;PlayersDefinition.getType(i);i++){new Player(i,true,'Player '+(i+1),[]);}};}());"use strict";var Map;Map=function(){var tiles,buildings,buildingsList,units,unitsList,navigationIndex,getBuildingPositions,createIndex,createIndexes,initNavigationIndex;tiles=[];buildings=[];buildingsList=[];units=[];unitsList=[];navigationIndex=[];this.updateBuilding=function(building){var positions,position,i;buildingsList.push(building);positions=getBuildingPositions(building);for(i=positions.length;i--;){position=positions[i];buildings[position.y][position.x]=building;(!building.passable)&&(navigationIndex[position.y][position.x]=false);}};this.removeBuilding=function(building){var positions,position,i;for(i=buildingsList.length;i--;){if(buildingsList[i].id==building.id){buildingsList.splice(i,1);break;}}
positions=getBuildingPositions(building);for(i=positions.length;i--;){position=positions[i];buildings[position.y][position.x]=null;(!building.passable)&&(navigationIndex[position.y][position.x]=true);}};this.updateUnit=function(unit){var i;switch(unit.action){case 0:unitsList.push(unit);units[unit.y][unit.x]=unit;navigationIndex[unit.y][unit.x]=false;break;case 1:for(i=unitsList.length;i--;){if(unitsList[i].id==unit.id){unitsList.splice(i,1);break;}}
if(units[unit.y][unit.x]&&(units[unit.y][unit.x].id==unit.id)){units[unit.y][unit.x]=null;navigationIndex[unit.y][unit.x]=true;}
break;case 2:if(units[unit.lastY][unit.lastX]&&(units[unit.lastX][unit.lastX].id==unit.id)){units[unit.lastY][unit.lastX]=null;navigationIndex[unit.lastY][unit.lastX]=true;}
units[unit.y][unit.x]=unit;navigationIndex[unit.y][unit.x]=false;break;}};this.setMap=function(newMap){tiles=newMap;createIndexes();};this.getMap=function(){return tiles;}
this.getObjectAt=function(x,y){if(units[y][x]){return units[y][x];}
return buildings[y][x];};this.setTiles=function(newTiles){tiles=newTiles;createIndex();};this.getTiles=function(){return tiles;};this.getBuildings=function(){return buildingsList;};this.getUnits=function(){return unitsList;};this.getBuildingsIndex=function(){return buildings;};this.getNavigationIndex=function(){return navigationIndex;};this.getView=function(x,y,width,height){var view,i;view=tiles.slice(y,y+height);width+=x;for(i=height;i--;){view[i]=view[i].slice(x,width);}
return view;};this.emptyMap=function(width,height){var i,j,row;tiles=[];for(i=height;i--;){row=[];for(j=width;j--;){row.push(new Tile(0));}
tiles.push(row);}
createIndexes();};this.randomMap=function(width,height){var i,j,row,tile;tiles=[];for(i=height;i--;){row=[];for(j=width;j--;){tile=new Tile(Math.floor(Math.random()*3));tile.lightSfx=!Math.floor(Math.random()*20)?Math.floor(Math.random()*5):0;row.push(tile);}
tiles.push(row);}
createIndexes();};this.exportData=function(){var i,j,data,mapRow,dataRow,buildingData,unitsData;data=[];for(i=tiles.length;i--;){mapRow=tiles[i];dataRow=[];for(j=mapRow.length;j--;){dataRow.unshift(mapRow[j].exportData());}
data.unshift(dataRow);}
buildingData=[];for(i=buildingsList.length;i--;){buildingData.push(buildingsList[i].exportData());}
unitsData=[];for(i=unitsList.length;i--;){unitsData.push(unitsList[i].exportData());}
return{tiles:data,buildings:buildingData,units:unitsData};};this.importData=function(data){var i,j,mapRow,dataRow;tiles=[];for(i=data.tiles.length;i--;){mapRow=[];dataRow=data.tiles[i];for(j=dataRow.length;j--;){mapRow.unshift(Tile.importData(dataRow[j]));}
tiles.unshift(mapRow);}
buildingsList=[];createIndexes();for(i=data.buildings.length;i--;){this.updateBuilding(Building.importData(data.buildings[i]));}
unitsList=[];for(i=data.units.length;i--;){this.updateUnit(Unit.importData(data.units[i]));}};getBuildingPositions=function(building){var positions,startX,startY,i,j,x,y;positions=[];startX=building.x+Math.floor((building.height-1)/2);startY=building.y;for(j=0;j<building.height;j++){x=startX-Math.ceil((j-startY%2)/2);y=startY+j;for(i=0;i<building.width;i++){positions.push({x:x,y:y});if(y%2){x++;y++;}else{y++;}}}
return positions;};createIndex=function(){var i,j,row,index;index=[];for(i=tiles.length;i--;){row=[];for(j=tiles[0].length;j--;){row.push(null);}
index.push(row);}
return index;};createIndexes=function(){buildings=createIndex();units=createIndex();navigationIndex=createIndex();initNavigationIndex();};initNavigationIndex=function(){var i,j,row,navigationRow;for(j=tiles.length;j--;){row=tiles[j];navigationRow=navigationIndex[j];for(i=row.length;i--;){navigationRow[i]=row[i].accessible;}}};};"use strict";var GamePlay;GamePlay=function(plugins,settings){var thread,threadInterval,scheduledPlugins,lastTick,tickOverflow,eventDeliveryPlugin,eventDrivenPlugins,eventQueue,singleTickScheduledPlugins;thread=function(){var i,j,now,tickCount;now=(new Date()).getTime();tickCount=(now-lastTick)/settings.tickDuration+tickOverflow;tickOverflow=tickCount-Math.floor(tickCount);tickCount=Math.floor(tickCount);lastTick=now;for(i=Math.min(tickCount,settings.maxTicks);i--;){for(j=scheduledPlugins.length;j--;){scheduledPlugins[j].handleTick();}}
for(i=singleTickScheduledPlugins.length;i--;){singleTickScheduledPlugins[i].handleTick();}};(function(){var PluginConstructor;PluginConstructor=function(){this.handleTick=function(){var currentEvents,i,eventListeningPlugins,j,currentEvent,eventCount;currentEvents=eventQueue;eventQueue=[];eventCount=currentEvents.length;for(i=0;i<eventCount;i++){currentEvent=currentEvents[i];eventListeningPlugins=eventDrivenPlugins[currentEvent.name];if(eventListeningPlugins){for(j=eventListeningPlugins.length;j--;){eventListeningPlugins[j].handleEvent(currentEvent.name,currentEvent.data);}}}};};PluginConstructor.prototype=new ScheduledPlugin();eventDeliveryPlugin=new PluginConstructor();}());this.sendEvent=function(eventName,eventData){eventQueue.push({name:eventName,data:eventData});};this.start=function(){if(threadInterval){throw new Error('GamePlay daemon is already running');}
lastTick=(new Date()).getTime();tickOverflow=0;threadInterval=setInterval(thread,settings.tickDuration);this.sendEvent("start",null);eventDeliveryPlugin.handleTick();this.sendEvent("running",null);};this.stop=function(){if(!threadInterval){throw new Error('GamePlay daemon is not running');}
clearInterval(threadInterval);this.sendEvent("stop",null);eventDeliveryPlugin.handleTick();threadInterval=null;};(function(){var i,plugin,registerEventDrivenPlugin;eventQueue=[];scheduledPlugins=[];singleTickScheduledPlugins=[];eventDrivenPlugins={};registerEventDrivenPlugin=function(plugin){var observedEvents,i,eventName;observedEvents=plugin.getObservedEvents();for(i=observedEvents.length;i--;){eventName=observedEvents[i];if(!eventDrivenPlugins[eventName]){eventDrivenPlugins[eventName]=[];}
eventDrivenPlugins[eventName].push(plugin);}};for(i=plugins.length;i--;){plugin=plugins[i];plugin.setGamePlay(this);if(plugin instanceof ScheduledPlugin){if(plugin.ignoresExtraTicks()){singleTickScheduledPlugins.push(plugin);}else{scheduledPlugins.push(plugin);}
if(plugin instanceof MixedPlugin){registerEventDrivenPlugin(plugin);}}else if(plugin instanceof EventDrivenPlugin){registerEventDrivenPlugin(plugin);}else{throw new Error('The provided object '+plugin+' is not a valid plugin');}}
scheduledPlugins.push(eventDeliveryPlugin);}.call(this));};"use strict";var GameLoader;GameLoader=function(progressbarAll,progressbarCurrent,progressMessage,loadingScreen,gameplayScreen,mapFileUrl,currentPlayer,playerResources,viewCanvas,minimapContainer){var spriteloader,steps,stepMessages,currentStep,performNextStep,setProgress,backgroundMusic,map,gamePlay,gameMusic,plugins;spriteloader=new SpriteLoader();steps=[function(){spriteloader.addObserver(function(progress){if(progress<0){throw new Error('Cannot load images');}
setProgress(progress);if(progress==1){performNextStep();}});spriteloader.load();},function(){var movedToNextStep;movedToNextStep=false;gameMusic=new GameMusic();gameMusic.registerLoadingObserver(function(progress){if(progress<0){throw new Error('Cannot load music');}
setProgress(progress);if((progress==1)&&!movedToNextStep){performNextStep();movedToNextStep=true;}});},function(){var xhr;xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){var compressor;if(xhr.readyState!=4){return;}
if(xhr.status==200){compressor=new MapCompressor();map=new Map();map.importData(compressor.decompress(xhr.responseText,3));performNextStep();}else{throw new Error('Cannot load map file: '+mapFileUrl);}};xhr.open('GET',mapFileUrl+'?time='+(new Date()).getTime(),true);xhr.send(null);},function(){var i,pluginName;plugins=[];for(i=Settings.gamePlayPlugins.length;i--;){pluginName=Settings.gamePlayPlugins[i];plugins.push(eval('new '+pluginName+'()'));setProgress(i/Settings.gamePlayPlugins.length);}
performNextStep();},function(){gamePlay=new GamePlay(plugins,Settings);gamePlay.sendEvent('gameMusicInitialization',gameMusic);gamePlay.sendEvent('gameMapInitialization',map);gamePlay.sendEvent('playerResourcesInitialization',playerResources);gamePlay.sendEvent('playerInitialization',currentPlayer);gamePlay.sendEvent('viewInitialization',{view:viewCanvas,minimap:minimapContainer});;gamePlay.start();performNextStep();},function(){var i,interval,total;i=0;total=75;interval=setInterval(function(){var volume;i++;volume=(1-i/total)*Settings.loadingMusicVolume;backgroundMusic.setVolume(volume);setProgress(i/total);if(i==total){clearInterval(interval);setTimeout(function(){loadingScreen.style.display='none';gameplayScreen.style.display='block';},15);backgroundMusic.stop();}},20);}];stepMessages=["Loading images...","Loading music...","Loading map...","Initializing the battle interface...","Starting command relays...","Done"];currentStep=-1;this.load=function(){backgroundMusic=new Audio(Settings.loadingMusic,{volume:Settings.loadingMusicVolume,duration:Settings.loadingMusicLength,loop:true,onload:function(){performNextStep();}});};performNextStep=function(){setTimeout(function(){currentStep++;setProgress(0);progressMessage.innerHTML=stepMessages[currentStep];steps[currentStep]();},15);};setProgress=function(progress){var all;progressbarCurrent.getElementsByTagName('div')[0].style.width=(progress*100)+'%';all=currentStep/steps.length*100+
100/steps.length*progress;progressbarAll.getElementsByTagName('div')[0].style.width=all+'%';};};"use strict";var Building;(function(){var id,buldings;id=0;buldings=[];Building=function(x,y,type,player,color){var definition;definition=BuildingsDefinition.getType(type);this.id=id++;this.x=x;this.y=y;this.name=definition.name;this.image=definition.image;this.imageWidth=definition.imageWidth;this.imageHeigth=definition.imageHeigth;this.width=definition.width;this.height=definition.height;this.colorify=definition.colorify;this.colorifyDistance=definition.colorifyDistance;this.type=type;this.passable=definition.passable;this.race=definition.race,this.player=player;this.color=color===undefined?Player.getPlayer(player).color:color;this.exportData=function(){return{x:this.x,y:this.y,type:this.type,player:this.player};};buldings.push(this);};Building.getBuilding=function(id){return buldings[id];};Building.importData=function(data){return new Building(data.x,data.y,data.type,data.player);};}());"use strict";var AdvancedMixedPlugin;AdvancedMixedPlugin=function(){this.getObservedEvents=function(){var events,i;events=[];for(i in this){if(this[i]instanceof Function){if(/^on[A-Z][a-zA-Z]*$/.test(i)){events.push(i.substring(2,3).toLowerCase()+
i.substring(3));}}}
return events;};this.handleEvent=function(eventName,eventData){var method;method='on'+eventName.substring(0,1).toUpperCase()+
eventName.substring(1);this[method](eventData);};};AdvancedMixedPlugin.prototype=new MixedPlugin();"use strict";var AdvancedEventDrivenPlugin;AdvancedEventDrivenPlugin=function(){this.getObservedEvents=function(){var events,i;events=[];for(i in this){if(this[i]instanceof Function){if(/^on[A-Z][a-zA-Z]*$/.test(i)){events.push(i.substring(2,3).toLowerCase()+
i.substring(3));}}}
return events;};this.handleEvent=function(eventName,eventData){var method;method='on'+eventName.substring(0,1).toUpperCase()+
eventName.substring(1);this[method](eventData);};};AdvancedEventDrivenPlugin.prototype=new EventDrivenPlugin();"use strict";var UnitsConstructionUIPlugin;UnitsConstructionUIPlugin=function(){var currentPlayerRace,template,buttonsContainer,createButton,createButtons,instance,playerId,buttons,getConstructionButton;instance=this;buttons={};createButton=function(unit){var node,img,progressInfo;node=document.createElement(template.tag);node.className=template.className;node.innerHTML=template.innerHTML;img=node.getElementsByTagName('img')[0];img.src=unit.imageData[5].src;img.alt=unit.name;img.style.width=Settings.tileWidth+'px';img.style.height=Settings.tileHeight+'px';progressInfo=node.getElementsByTagName('div')[0];node.getElementsByTagName('div')[2].innerHTML=unit.name;node.title='¢ '+(unit.construction.step[0]*(1000/unit.construction.stepProgress));node.addEventListener('click',function(){if(!progressInfo.innerHTML){progressInfo.innerHTML='0 %';}
instance.sendEvent('enqueueUnitConstruction',{player:playerId,unit:unit.type});},false);addEventListener('contextmenu',function(event){var clickedNode;event.preventDefault();clickedNode=getConstructionButton(event.target);if(clickedNode===node){instance.sendEvent('cancelUnitConstruction',{player:playerId,unit:unit.type});}});node.progressInfo=progressInfo;buttons[unit.type]=node;buttonsContainer.appendChild(node);};createButtons=function(){var unit,type;for(type=0;unit=UnitsDefinition.getType(type);type++){if((unit.race!==null)&&(unit.race==currentPlayerRace)){createButton(unit);}}};this.onUnitConstructionProgress=function(data){var unitButton,label;if(data.player==playerId){unitButton=buttons[data.unit];label=Math.floor(data.progress/10)+' %';if(data.enqueued){label+=' ('+data.enqueued+')';}
unitButton.progressInfo.innerHTML=label;}};this.onPlayerInitialization=function(player){playerId=player.id;currentPlayerRace=player.race;if(template){createButtons();}};this.onStart=function(tmp){var templateNode;templateNode=document.querySelector('#units-buttons .construction-buttons-content *');buttonsContainer=templateNode.parentNode;template={tag:templateNode.nodeName,className:templateNode.className,innerHTML:templateNode.innerHTML,width:70,height:38};buttonsContainer.innerHTML='';if(currentPlayerRace!==undefined){createButtons();}};this.onStop=function(tmp){buttonsContainer.innerHTML='';};getConstructionButton=function(clickedNode){var limit;limit=3;while(clickedNode.className!=='construction-button'){if(!limit--){return null;}
clickedNode=clickedNode.parentNode;if(!clickedNode){return null;}}
return clickedNode;};};UnitsConstructionUIPlugin.prototype=new AdvancedEventDrivenPlugin();"use strict";var ResourceManagerPlugin;ResourceManagerPlugin=function(){var playerId,resources,updateUI,resourceContainers,initContainers;updateUI=function(){var playerResources,i;playerResources=resources[playerId];for(i=playerResources.length;i--;){resourceContainers[i].innerHTML=playerResources[i];}};initContainers=function(){var i;resourceContainers=[];for(i=0;i<resources[0].length;i++){resourceContainers[i]=document.querySelector('#resource-'+i);}};this.onResourceRequest=function(request){var dispatch,i,playerResources,satisfiable;dispatch={target:request.target,targetType:request.targetType,player:request.player,resources:[]};satisfiable=true;playerResources=resources[request.player];for(i=request.resources.length;i--;){if(playerResources[i]<request.resources[i]){dispatch={target:request.target,targetType:request.targetType,player:request.player,resources:false};break;}
playerResources[i]-=request.resources[i];dispatch.resources[i]=request.resources[i];}
this.sendEvent('resourceDispatch',dispatch);updateUI();};this.onResourcesGained=function(gainInfo){var playerResources,i;playerResources=resources[gainInfo.player];for(i=gainInfo.resources.length;i--;){playerResources[i]+=gainInfo.resources[i];}
updateUI();};this.onPlayerResourcesInitialization=function(resourceStats){resources=resourceStats;if(playerId!==undefined){initContainers();updateUI();}};this.onPlayerInitialization=function(player){playerId=player.id;if(resources){initContainers();updateUI();}};};ResourceManagerPlugin.prototype=new AdvancedEventDrivenPlugin();"use strict";var MinimapControlPlugin;MinimapControlPlugin=function(){var mouseDown,width,height,instance;(function(){mouseDown=false;instance=this;}.call(this));this.onRunning=function(data){var minimap;minimap=document.querySelector("#minimap > canvas");minimap.addEventListener("mousedown",function(event){mouseDown=true;handlePositionSelection(event.offsetX,event.offsetY);event.preventDefault();},false);window.addEventListener("mouseup",function(){mouseDown=false;},false);minimap.addEventListener("mousemove",function(event){if(mouseDown){handlePositionSelection(event.offsetX,event.offsetY);}
event.preventDefault();},false);width=minimap.width;height=minimap.height;};function handlePositionSelection(x,y){instance.sendEvent("viewSetByMinimap",{x:x/width,y:y/height});}};MinimapControlPlugin.prototype=new AdvancedEventDrivenPlugin();"use strict";var GameMusicPlugin;GameMusicPlugin=function(){var gameMusic;this.onGameMusicInitialization=function(gameMusicInstance){gameMusic=gameMusicInstance;gameMusic.play();};this.onGameIntensityChange=function(newIntensity){gameMusic.setIntensity(newIntensity);};this.onStart=function(tmp){if(gameMusic){gameMusic.play();}};this.onStop=function(tmp){gameMusic.stop();};};GameMusicPlugin.prototype=new AdvancedEventDrivenPlugin();"use strict";var BuildingsConstructionUIPlugin;BuildingsConstructionUIPlugin=function(){var currentPlayerRace,template,buttonsContainer,createButton,createButtons,scaleButtonIcon,instance,playerId,buttons,getConstructionButton;instance=this;buttons={};scaleButtonIcon=function(building,img){var horizontalRatio,verticalRatio,shrinkRatio;if((building.imageWidth<=template.width)||(building.imageHeigth<=template.height)){img.style.width=building.imageWidth+'px';img.style.height=building.imageHeigth+'px';}else{horizontalRatio=building.imageWidth/template.width;verticalRatio=building.imageHeigth/template.height;shrinkRatio=Math.max(horizontalRatio,verticalRatio);img.style.width=building.imageWidth/shrinkRatio+'px';img.style.height=building.imageHeigth/shrinkRatio+'px';}};createButton=function(building){var node,img,progressInfo;node=document.createElement(template.tag);node.className=template.className;node.innerHTML=template.innerHTML;img=node.getElementsByTagName('img')[0];img.src=building.imageData.src;img.alt=building.name;progressInfo=node.getElementsByTagName('div')[0];node.getElementsByTagName('div')[2].innerHTML=building.name;node.title='¢ '+(building.construction.step[0]*(1000/building.construction.stepProgress));if(building.imageWidth&&building.imageHeigth){scaleButtonIcon(building,img);}
node.addEventListener('click',function(){if(!progressInfo.innerHTML){progressInfo.innerHTML='0 %';instance.sendEvent('enqueueBuildingConstruction',{player:playerId,building:building.type});}else if(node.ready){alert('placing the building is not implemented yet');}},false);addEventListener('contextmenu',function(event){var clickedNode;event.preventDefault();clickedNode=getConstructionButton(event.target);if(clickedNode===node){instance.sendEvent('cancelBuildingConstruction',{player:playerId,building:building.type});}});node.progressInfo=progressInfo;buttons[building.type]=node;buttonsContainer.appendChild(node);};createButtons=function(){var building,type;for(type=0;building=BuildingsDefinition.getType(type);type++){if((building.race!==null)&&(building.race==currentPlayerRace)){createButton(building);}}};this.onBuildingConstrucionProgress=function(progress){var buildingButton,progressLabel;if(progress.player==playerId){buildingButton=buttons[progress.building];if(progress.progress>=1000){progressLabel='READY';buildingButton.ready=true;}else{progressLabel=Math.floor(progress.progress/10)+' %';}
buildingButton.progressInfo.innerHTML=progressLabel;}};this.onPlayerInitialization=function(player){playerId=player.id;currentPlayerRace=player.race;if(template){createButtons();}};this.onStart=function(tmp){var templateNode;templateNode=document.querySelector('#buildings-buttons .construction-buttons-content *')
buttonsContainer=templateNode.parentNode;template={tag:templateNode.nodeName,className:templateNode.className,innerHTML:templateNode.innerHTML,width:70,height:38};buttonsContainer.innerHTML='';if(currentPlayerRace!==undefined){createButtons();}};this.onStop=function(tmp){buttonsContainer.innerHTML='';};getConstructionButton=function(clickedNode){var limit;limit=3;while(clickedNode.className!=='construction-button'){if(!limit--){return null;}
clickedNode=clickedNode.parentNode;if(!clickedNode){return null;}}
return clickedNode;};};BuildingsConstructionUIPlugin.prototype=new AdvancedEventDrivenPlugin();"use strict";var ViewRendererPlugin;ViewRendererPlugin=function(){var view,map,x,y,borderOffset,viewWidth,viewHeight,viewLayerSize,minX,minY,maxX,maxY;this.handleTick=function(){view.display(x,y);};this.ignoresExtraTicks=function(){return true;};this.onViewSetByMinimap=function(data){x=Math.floor(viewLayerSize.width*data.x-viewWidth/2);y=Math.floor(viewLayerSize.height*data.y-viewHeight/2);x=Math.min(maxX,Math.max(x,minX));y=Math.min(maxY,Math.max(y,minY));};this.onGameMapInitialization=function(data){map=data;if(view){view.setMap(map);}};this.onViewInitialization=function(data){var minimapSize,viewWidthInTiles,viewHeightInTiles;view=new View();view.setCanvas(data.view);view.setMinimapContainer(data.minimap);minimapSize=Settings.pluginConfiguration.ViewRendererPlugin.minimap;view.setMinimapSize(minimapSize.width,minimapSize.height);if(map){view.setMap(map);}
viewWidth=data.view.width;viewHeight=data.view.height;viewWidthInTiles=Math.round(viewWidth/Settings.tileWidth);viewHeightInTiles=Math.round(viewHeight/Settings.tileHeight);view.setMainViewSize(viewWidthInTiles,viewHeightInTiles);viewLayerSize=view.getMainViewLayersDimensions();maxX=viewLayerSize.width-viewWidth-borderOffset;maxY=viewLayerSize.height-viewHeight-borderOffset;};(function(pluginSettings){borderOffset=pluginSettings.borderOffset;x=borderOffset;y=borderOffset;minX=borderOffset;minY=borderOffset;}(Settings.pluginConfiguration.ViewRendererPlugin));};ViewRendererPlugin.prototype=new AdvancedMixedPlugin();"use strict";var ConstructionButtonsScroller;ConstructionButtonsScroller=function(){var scrollDown1stHandler,scrollUp1stHandler,stopScroll1stHandler,scrolling1st,scrollDown2ndHandler,scrollUp2ndHandler,stopScroll2ndHandler,scrolling2nd,$,scrollSpeed,buttonsStrip1,buttonsStrip2,upButton1,downButton1,upButton2,downButton2;scrollSpeed=7;$=function(selector){return document.querySelectorAll(selector);};scrollDown1stHandler=function(){scrolling1st=scrollSpeed;};scrollUp1stHandler=function(){scrolling1st=-scrollSpeed;};stopScroll1stHandler=function(){scrolling1st=0;};scrollDown2ndHandler=function(){scrolling2nd=scrollSpeed;};scrollUp2ndHandler=function(){scrolling2nd=-scrollSpeed;};stopScroll2ndHandler=function(){scrolling2nd=0;};this.handleTick=function(){if(scrolling1st){buttonsStrip1.scrollTop+=scrolling1st;}
if(scrolling2nd){buttonsStrip2.scrollTop+=scrolling2nd;}};this.onStart=function(data){upButton1=$('#buildings-buttons .button-scroll-up')[0];downButton1=$('#buildings-buttons .button-scroll-down')[0];buttonsStrip1=$('#buildings-buttons .construction-buttons-content')[0];upButton2=$('#units-buttons .button-scroll-up')[0];downButton2=$('#units-buttons .button-scroll-down')[0];buttonsStrip2=$('#units-buttons .construction-buttons-content')[0];upButton1.addEventListener('mousedown',scrollUp1stHandler,false);upButton1.addEventListener('mouseup',stopScroll1stHandler,false);downButton1.addEventListener('mousedown',scrollDown1stHandler,false);downButton1.addEventListener('mouseup',stopScroll1stHandler,false);upButton2.addEventListener('mousedown',scrollUp2ndHandler,false);upButton2.addEventListener('mouseup',stopScroll2ndHandler,false);downButton2.addEventListener('mousedown',scrollDown2ndHandler,false);downButton2.addEventListener('mouseup',stopScroll2ndHandler,false);};this.onStop=function(data){scrolling1st=0;scrolling2nd=0;upButton1.removeEventListener('mousedown',scrollUp1stHandler,false);upButton1.removeEventListener('mouseup',stopScroll1stHandler,false);downButton1.removeEventListener('mousedown',scrollDown1stHandler,false);downButton1.removeEventListener('mouseup',stopScroll1stHandler,false);upButton2.removeEventListener('mousedown',scrollUp2ndHandler,false);upButton2.removeEventListener('mouseup',stopScroll2ndHandler,false);downButton2.removeEventListener('mousedown',scrollDown2ndHandler,false);downButton2.removeEventListener('mouseup',stopScroll2ndHandler,false);};};ConstructionButtonsScroller.prototype=new AdvancedMixedPlugin();"use strict";var BuildingsUnitsConstruction;BuildingsUnitsConstruction=function(){var constructionQueues={},instance,maxQueueLength;(function(){instance=this;maxQueueLength=Settings.pluginConfiguration.BuildingsUnitsConstruction.maxQueueLength;}.call(this));this.handleTick=function(){var playerId,buildingsTasks,buildingType,unitsTasks,unitType;for(playerId in constructionQueues){if(!constructionQueues.hasOwnProperty(playerId)){continue;}
buildingsTasks=constructionQueues[playerId].buildings;for(buildingType in buildingsTasks){if(!buildingsTasks.hasOwnProperty(buildingType)||!buildingsTasks[buildingType]){continue;}
if(buildingsTasks[buildingType].waitingForResources){continue;}
if(buildingsTasks[buildingType].stepTimeout){buildingsTasks[buildingType].stepTimeout--;continue;}
this.sendEvent('resourceRequest',{target:buildingType,targetType:'building',player:playerId,resources:buildingsTasks[buildingType].definition.construction.step});buildingsTasks[buildingType].waitingForResources=true;}
unitsTasks=constructionQueues[playerId].units;for(unitType in unitsTasks){if(!unitsTasks.hasOwnProperty(unitType)||!unitsTasks[unitType]){continue;}
if(unitsTasks[unitType].waitingForResources){continue;}
if(unitsTasks[unitType].stepTimeout){unitsTasks[unitType].stepTimeout--;continue;}
this.sendEvent('resourceRequest',{target:unitType,targetType:'unit',player:playerId,resources:unitsTasks[unitType].definition.construction.step});unitsTasks[unitType].waitingForResources=true;}}};this.onStart=function(data){};this.onStop=function(data){};this.onEnqueueBuildingConstruction=function(eventData){var buildings,definition;if(!constructionQueues[eventData.player]){constructionQueues[eventData.player]={buildings:{},units:{}};}
buildings=constructionQueues[eventData.player].buildings;if(buildings[eventData.building]){return;}
definition=BuildingsDefinition.getType(eventData.building);buildings[eventData.building]={type:eventData.building,progress:0,definition:definition,waitingForResources:false,stepTimeout:0};};this.onCancelBuildingConstruction=function(data){var buildingTasks,resources,i,constructionInfo;if(!constructionQueues[data.player]){return;}
buildingTasks=constructionQueues[data.player].buildings;if(!buildingTasks[data.building]){return;}
resources=[];constructionInfo=buildingTasks[data.building].definition.construction;for(i=constructionInfo.step.length;i--;){resources[i]=constructionInfo.step[i]*buildingTasks[data.building].progress/constructionInfo.stepProgress;}
instance.sendEvent('resourcesGained',{player:data.player,resources:resources});buildingTasks[data.building]=undefined;};this.onCancelUnitConstruction=function(data){var unitTasks,resources,i,constructionInfo;if(!constructionQueues[data.player]){return;}
unitTasks=constructionQueues[data.player].units;if(!unitTasks[data.unit]){return;}
if(unitTasks[data.unit].enqueued){unitTasks[data.unit].enqueued--;}else{resources=[];constructionInfo=unitTasks[data.unit].definition.construction;for(i=constructionInfo.step.length;i--;){resources[i]=constructionInfo.step[i]*unitTasks[data.unit].progress/constructionInfo.stepProgress;}
instance.sendEvent('resourcesGained',{player:data.player,resources:resources});unitTasks[data.unit]=undefined;}};this.onEnqueueUnitConstruction=function(data){var units,definition;if(!constructionQueues[data.player]){constructionQueues[data.player]={buildings:{},units:{}};}
units=constructionQueues[data.player].units;if(units[data.unit]){units[data.unit].enqueued=Math.min(units[data.unit].enqueued+1,maxQueueLength);}else{definition=UnitsDefinition.getType(data.unit);units[data.unit]={type:data.unit,progress:0,definition:definition,waitingForResources:false,stepTimeout:0,enqueued:0};}};this.onResourceDispatch=function(data){var playersBuildings,buildingTask,playerUnits,unitTask;if(data.targetType==='unit'){playerUnits=constructionQueues[data.player].units;unitTask=playerUnits[data.target];if(data.resources){if(!unitTask){instance.sendEvent('resourcesGained',{player:data.player,resources:data.resources});return;}
unitTask.progress+=unitTask.definition.construction.stepProgress;unitTask.stepTimeout+=unitTask.definition.construction.stepDuration;instance.sendEvent('unitConstructionProgress',{player:data.player,unit:data.target,progress:unitTask.progress,enqueued:unitTask.enqueued});if(unitTask.progress>=1000){if(unitTask.enqueued){unitTask.enqueued--;unitTask.progress=0;}else{playerUnits[data.target]=undefined;}}}
unitTask.waitingForResources=false;}else if(data.targetType==='building'){playersBuildings=constructionQueues[data.player].buildings;buildingTask=playersBuildings[data.target];if(data.resources){if(!buildingTask){instance.sendEvent('resourcesGained',{player:data.player,resources:data.resources});return;}
buildingTask.progress+=buildingTask.definition.construction.stepProgress;buildingTask.stepTimeout=buildingTask.definition.construction.stepDuration;instance.sendEvent('buildingConstrucionProgress',{player:data.player,building:data.target,progress:buildingTask.progress});if(buildingTask.progress>=1000){playersBuildings[data.target]=undefined;}}
buildingTask.waitingForResources=false;}};};BuildingsUnitsConstruction.prototype=new AdvancedMixedPlugin();"use strict";var SpriteLoader;SpriteLoader=function(){var observers,notifyObservers,loadSprite,indexes,getBaseURL,canvas,context,baseUrl,extractTiles,tileWidth,tileHeight,extractImage,extractUnits,extractBuildings,colorifier;observers=[];colorifier=new Colorifier();this.addObserver=function(observer){if(observer instanceof Function){observers.push(observer);}};this.load=function(){var xhr;tileWidth=Math.ceil(Settings.tileWidth);tileHeight=Math.ceil(Settings.tileHeight);baseUrl=baseUrl||getBaseURL();xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(xhr.readyState==4){if(xhr.status==200){notifyObservers(0.2);try{indexes=JSON.parse(xhr.responseText);loadSprite();}catch(e){notifyObservers(-1);}}else{notifyObservers(-1);}}};xhr.open('GET',baseUrl+'data/sprite.json',true);xhr.send(null);};loadSprite=function(){var image;image=new Image();image.onload=function(){canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;context=canvas.getContext('2d');context.drawImage(image,0,0);notifyObservers(0.7);setTimeout(extractTiles,0);};image.onabort=function(){notifyObservers(-1);};image.onerror=function(){notifyObservers(-1);};image.onstalled=function(){notifyObservers(-1);}
image.onsuspend=function(){notifyObservers(-1);}
image.src=baseUrl+'data/images.png?time='+(new Date()).getTime();};extractTiles=function(){var i,tile;for(i=0;tile=TilesDefinition.getType(i);i++){tile.imageData=extractImage(tileWidth*i,0,tileWidth,tileHeight);}
notifyObservers(0.8);setTimeout(extractUnits,0);};extractUnits=function(){var i,j,unit,start;start=indexes.unitsStart;for(i=0;unit=UnitsDefinition.getType(i);i++){unit.imageData=[];unit.playerImages=[]
for(j=0;j<8;j++){unit.imageData.push(extractImage(j*tileWidth,start+i*tileHeight,tileWidth,tileHeight));unit.playerImages.push(colorifier.colorifyForPlayers(unit.imageData[j],unit.colorify,unit.colorifyDistance));}}
notifyObservers(0.9);setTimeout(extractBuildings,0);};extractBuildings=function(){var i,building,starts,heights,startY;starts=indexes.buildings.ends;starts.unshift(0);heights=indexes.buildings.heights;startY=indexes.buildings.start;for(i=0;building=BuildingsDefinition.getType(i);i++){building.imageData=extractImage(starts[i],startY,starts[i+1],heights[i]);building.playerImages=colorifier.colorifyForPlayers(building.imageData,building.colorify,building.colorifyDistance);}
notifyObservers(1);};extractImage=function(x,y,width,height){var imageCanvas,image;imageCanvas=document.createElement('canvas');imageCanvas.width=width;imageCanvas.height=height;imageCanvas.getContext('2d').putImageData(context.getImageData(x,y,width,height),0,0);image=new Image();image.src=imageCanvas.toDataURL();return image;};getBaseURL=function(){var scripts,i,url;scripts=document.getElementsByTagName('script');for(i=scripts.length;i--;){if(scripts[i].src.match(/^.*spriteloader[.]js/)){url=scripts[i].src;url=url.substring(0,url.indexOf('spriteloader.js'));url=url.replace(/js\/$/,'');return url;}}
return'';};notifyObservers=function(progress){var i;for(i=observers.length;i--;){observers[i](progress);}};};"use strict";var ImageLoader;ImageLoader=function(){var loadBuildingImages,notifyObservers,buildingsIndex,observers,unitsIndex,loadUnitImages,tilesIndex,loadTilesImages,transformTileImage,pathPrefix,transformBuildingImage,colorifier;observers=[];pathPrefix='';colorifier=new Colorifier();this.load=function(buildings,units,tiles){loadBuildingImages(buildings);loadUnitImages(units);loadTilesImages(tiles);};this.addObserver=function(observer){observers.push(observer);};this.setPathPrefix=function(prefix){pathPrefix=prefix;};loadTilesImages=function(tiles){var tile,currentType;tilesIndex=[];currentType=0;tile=tiles.getType(currentType);while(tile){tilesIndex.push(false);(function(){var image,type,tileDefinition;tileDefinition=tile;type=currentType;image=new Image();image.onload=function(){tilesIndex[type]=true;tileDefinition.imageData=Settings.tileImagesTransformed?image:transformTileImage(image);notifyObservers();};image.src=pathPrefix+tile.image;}());tile=tiles.getType(++currentType);}};loadUnitImages=function(units){var unit,currentType;unitsIndex=[];currentType=0;unit=units.getType(currentType);while(unit){unitsIndex.push(false);(function(){var images,image,type,i,loadedImages,unitDefinition;unitDefinition=unit;type=currentType;images=[];loadedImages=[];for(i=8;i--;){loadedImages[i]=false;image=new Image();(function(){var index;index=i;image.onload=function(){var i;loadedImages[index]=true;for(i=8;i--;){if(!loadedImages[i]){return;}}
if(!Settings.unitImagesTransformed){for(i=8;i--;){images[i]=transformTileImage(images[i]);}}
unitsIndex[type]=true;unitDefinition.imageData=images;unitDefinition.playerImages=[];for(i=8;i--;){unitDefinition.playerImages[i]=colorifier.colorifyForPlayers(images[i],unitDefinition.colorify,unitDefinition.colorifyDistance);}
notifyObservers();};}());images[i]=image;}
for(i=8;i--;){images[i].src=pathPrefix+unit.image.replace('?',i);}}());unit=units.getType(++currentType);}};loadBuildingImages=function(buildings){var building,currentType;buildingsIndex=[];currentType=0;building=buildings.getType(currentType);while(building){buildingsIndex.push(false);(function(){var image,type,buildingDefinition;buildingDefinition=building;type=currentType;image=new Image();image.onload=function(){buildingsIndex[type]=true;buildingDefinition.imageData=Settings.buildingImagesTransformed?image:transformBuildingImage(image,buildingDefinition.width,buildingDefinition.height);buildingDefinition.playerImages=colorifier.colorifyForPlayers(buildingDefinition.imageData,buildingDefinition.colorify,buildingDefinition.colorifyDistance);notifyObservers();};image.src=pathPrefix+building.image;}());building=buildings.getType(++currentType);}};notifyObservers=function(){var i,done;done=0;for(i=buildingsIndex.length;i--;){if(buildingsIndex[i]){done++;}}
for(i=unitsIndex.length;i--;){if(unitsIndex[i]){done++;}}
for(i=tilesIndex.length;i--;){if(tilesIndex[i]){done++;}}
done/=buildingsIndex.length+unitsIndex.length+tilesIndex.length;for(i=observers.length;i--;){observers[i](done);}};transformBuildingImage=function(source,width,height){var canvas,context,data,offset;canvas=document.createElement('canvas');canvas.width=140+Math.ceil(Settings.tileWidth*width);canvas.height=500+Math.ceil(Settings.tileHeight*height);context=canvas.getContext('2d');context.scale(1,Settings.heightScale);context.rotate(45*Math.PI/180);context.drawImage(source,7*Settings.tileSize,0);offset=(Math.SQRT2/2)*(Math.ceil((width-1)/2)*(Settings.tileWidth+10));data=context.getImageData(84-offset,99*Settings.heightScale,Settings.tileWidth*width,Settings.tileHeight*height);canvas=document.createElement('canvas');canvas.width=data.width;canvas.height=data.height;context=canvas.getContext('2d');context.putImageData(data,0,0);data=new Image();data.src=canvas.toDataURL();return data;};transformTileImage=function(source){var canvas,context,data;canvas=document.createElement('canvas');canvas.width=7+Math.ceil(Settings.tileWidth*2);canvas.height=22+Math.ceil(Settings.tileHeight*2);context=canvas.getContext('2d');context.scale(1,Settings.heightScale);context.rotate(45*Math.PI/180);context.drawImage(source,30,0);data=context.getImageData(7,20*Settings.heightScale,Settings.tileWidth,Settings.tileHeight);canvas=document.createElement('canvas');canvas.width=data.width;canvas.height=data.height;context=canvas.getContext('2d');context.putImageData(data,0,0);data=new Image();data.src=canvas.toDataURL();return data;};};"use strict";var Colorifier;Colorifier=function(){var processData,decodeColor,getDistance,getTargetColor;Player.createGenericPlayers();this.colorifyForPlayers=function(image,source,maxDistance){var images,player,i;images=[];for(i=0;player=Player.getPlayer(i++);){images.push(this.colorify(image,source,player.color,maxDistance));}
return images;};this.colorify=function(image,source,target,maxDistance){var canvas,context,data;canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;context=canvas.getContext('2d');context.drawImage(image,0,0);data=context.getImageData(0,0,image.width-1,image.height-1);processData(data,decodeColor(source),decodeColor(target),maxDistance);context.putImageData(data,0,0);return canvas;};processData=function(pixelData,source,target,maxDistance){var data,i,r,g,b,length,distance,newColor;data=pixelData.data;length=data.length;for(i=0;i<length;i+=4){r=data[i];g=data[i+1];b=data[i+2];distance=getDistance(r,g,b,source.r,source.g,source.b);if(distance<=maxDistance){newColor=getTargetColor(source,{r:r,g:g,b:b},target);data[i]=newColor.r;data[i+1]=newColor.g;data[i+2]=newColor.b;}}};getTargetColor=function(source,pixel,target){var rd,gd,bd;rd=target.r-source.r;gd=target.g-source.g;bd=target.b-source.b;return{r:Math.max(0,Math.min(255,pixel.r+rd)),g:Math.max(0,Math.min(255,pixel.g+gd)),b:Math.max(0,Math.min(255,pixel.b+bd))};};getDistance=function(r1,g1,b1,r2,g2,b2){return Math.sqrt(Math.pow(r1-r2,2)+Math.pow(g1-g2,2)+
Math.pow(b1-b2,2));};decodeColor=function(color){color=color.length==7?color.substring(1):color;return{r:parseInt(color.substring(0,2),16),g:parseInt(color.substring(2,4),16),b:parseInt(color.substring(4,6),16)};};};"use strict";var View;View=function(){var mainview,minimap;this.setCanvas=function(viewCanvas){mainview=new MainView();mainview.setCanvas(viewCanvas);};this.setMinimapContainer=function(container){minimap=new MiniMap();minimap.setContainer(container);};this.setMinimapSize=function(width,height){minimap.setSize(width,height);};this.setMap=function(map){if(!mainview||!minimap){throw new Error('Cannot set map befor canvases and minimap '+'container');}
mainview.setMap(map);minimap.setMap(map);minimap.setMainViewBufferSize(mainview.getLayersDimensions());};this.onBuildingChange=function(building){mainview.onBuildingChange(building);minimap.onBuildingChange(building);};this.onUnitChange=function(unit){mainview.onUnitChange(unit);minimap.onUnitChange(unit);};this.setMainViewSize=function(width,height){minimap.setMainViewSize(width,height);};this.display=function(x,y){mainview.display(x,y);minimap.render(x,y);};this.getMainViewLayersDimensions=function(){return mainview.getLayersDimensions();};};"use strict";var UnitsLayer;UnitsLayer=function(){var canvas,canvasWidth,canvasHeight,canvasContext,tileWidth,tileHeight,grid,addUnit,removeUnit,gridWidth,gridHeight,horizonzalTilesOnDisplay,verticalTilesOnDisplay,index,horizonzalIndexTilesOnDisplay,verticalIndexTilesOnDisplay,indexGranularity,displayIndexCell;this.setCanvas=function(newCanvas){canvas=newCanvas;canvasWidth=canvas.width;canvasHeight=canvas.height;canvasContext=canvas.getContext('2d');};this.setMap=function(map){var i,j,row,mapData,units;if(!canvas){throw new Error('The canvas has to be set before map');}
mapData=map.getMap();tileWidth=TilesDefinition.getType(0).imageData.width-1;tileHeight=TilesDefinition.getType(0).imageData.height/2-1;horizonzalTilesOnDisplay=Math.ceil(canvasWidth/tileWidth)+2;verticalTilesOnDisplay=Math.ceil(canvasHeight/tileHeight)+2;grid=[];for(i=mapData.length;i--;){row=[];for(j=mapData[0].length;j--;){row.push(false);}
grid.push(row);}
gridWidth=grid[0].length;gridHeight=grid.length;index=[];indexGranularity=Settings.gridIndexGranularity;for(i=Math.ceil(gridHeight/indexGranularity);i--;){row=[];for(j=Math.ceil(gridWidth/indexGranularity);j--;){row.push(0);}
index.push(row);}
horizonzalIndexTilesOnDisplay=Math.ceil(horizonzalTilesOnDisplay/indexGranularity);verticalIndexTilesOnDisplay=Math.ceil(verticalTilesOnDisplay/indexGranularity);units=map.getUnits();for(i=units.length;i--;){this.onUnitChange(units[i]);}};this.getLayerDimensions=function(){return{width:gridWidth*tileWidth+tileWidth/2,height:gridHeight*tileHeight+tileHeight};};this.onUnitChange=function(unit){switch(unit.action){case 2:removeUnit(unit);case 0:addUnit(unit);break;case 1:removeUnit(unit);break;}};this.display=function(x,y){var gridX,gridY,indexX,indexY,i,j;gridX=Math.max(0,Math.floor(x/tileWidth)-1);gridY=Math.max(0,Math.floor(y/tileHeight)-1);indexX=Math.floor(gridX/indexGranularity);indexY=Math.floor(gridY/indexGranularity);for(i=verticalIndexTilesOnDisplay;i--;){if(index[indexY+i]){for(j=horizonzalIndexTilesOnDisplay;j--;){if(index[indexY+i][indexX+j]){displayIndexCell(indexX+j,indexY+i,x,y);}}}}};displayIndexCell=function(x,y,screenX,screenY){var i,j,unit,gridX,gridY,currentX,currentY,offsetX;gridX=x*indexGranularity;gridY=y*indexGranularity;for(i=indexGranularity;i--;){currentY=gridY+i;offsetX=(currentY%2)*tileWidth/2;for(j=indexGranularity;j--;){currentX=gridX+j;if(grid[currentY]&&(unit=grid[currentY][currentX])){canvasContext.drawImage(UnitsDefinition.getType(unit.type).playerImages[unit.direction][unit.player],offsetX+currentX*tileWidth-screenX+
unit.moveOffsetX,currentY*tileHeight-screenY+
unit.moveOffsetY);}}}};addUnit=function(unit){grid[unit.y][unit.x]=unit;index[Math.floor(unit.y/indexGranularity)][Math.floor(unit.x/indexGranularity)]++;};removeUnit=function(unit){if(unit.action==1){grid[unit.y][unit.x]=false;index[Math.floor(unit.y/indexGranularity)][Math.floor(unit.x/indexGranularity)]--;}else{grid[unit.lastY][unit.lastX]=false;index[Math.floor(unit.lastY/indexGranularity)][Math.floor(unit.lastX/indexGranularity)]--;}};};"use strict";var TerrainLayer;TerrainLayer=function(){var buffer,canvas,canvasContext,map,bufferWidth,bufferHeight,bufferCanvas;this.setCanvas=function(newCanvas){canvas=newCanvas;canvasContext=canvas.getContext('2d');};this.getBufferDimensions=function(){return{width:bufferWidth,height:bufferHeight};};this.setMap=function(newMap){if(!(newMap instanceof Array)){throw new TypeError('map has to be an array');}
map=newMap;};this.display=function(x,y){canvasContext.drawImage(bufferCanvas,-x,-y);};this.updateTile=function(x,y){var xOffset,tileWidth,tileHeight;tileWidth=TilesDefinition.getType(0).imageData.width;tileWidth-=1;tileHeight=TilesDefinition.getType(0).imageData.height;tileHeight/=2;tileHeight-=1;xOffset=(y%2)*(tileWidth/2);buffer.drawImage(TilesDefinition.getType(map[y][x].type).imageData,xOffset+x*tileWidth,y*tileHeight-2);};this.init=function(){var tileWidth,tileHeight,i,j,row,xOffset;if(!canvasContext){throw new Error("Missing renderer's target canvas");}
if(!map){throw new Error('Cannot init terrain renderer without map data');}
bufferCanvas=document.createElement('canvas');tileWidth=TilesDefinition.getType(0).imageData.width;tileHeight=TilesDefinition.getType(0).imageData.height;buffer=bufferCanvas.getContext('2d');tileHeight/=2;tileWidth-=1;tileHeight-=1;bufferCanvas.width=map[0].length*tileWidth+tileWidth/2;bufferCanvas.height=map.length*tileHeight+tileHeight;for(i=map.length;i--;){row=map[i];xOffset=(i%2)*(tileWidth/2);for(j=row.length;j--;){buffer.drawImage(TilesDefinition.getType(row[j].type).imageData,xOffset+j*tileWidth,i*tileHeight-2);}}
bufferWidth=bufferCanvas.width;bufferHeight=bufferCanvas.height;};};"use strict";var SFX;SFX=function(){var canvas,map,canvasWidth,canvasHeight,tileWidth,tileHeight,context,canvasTileWidth,canvasTileHeight,depthFactor,canvasCenterX,canvasCenterY,buildingsIndex,displayLightSFX,displayBuildableTiles,displayTileOverlay,enableBuildOverlay,displayNavigableTiles,navigationIndex,enableNavigationIndex,inaccessibleColor,accessibleColor;depthFactor=Settings.sfx3DLightFactor;accessibleColor=Settings.sfxAccessibleTileColor;inaccessibleColor=Settings.sfxInaccessibleTileColor;enableBuildOverlay=false;enableNavigationIndex=false;this.setCanvas=function(newCanvas){canvas=newCanvas;canvasWidth=canvas.width;canvasHeight=canvas.height;context=canvas.getContext('2d');context.strokeStyle=Settings.sfx3DLightColor;context.lineCap='round';canvasCenterX=canvasWidth/2;canvasCenterY=canvasHeight/2;};this.setMap=function(newMap){if(!canvas){throw new Error("cannot set map for SFX before canvas!");}
map=newMap.getMap();tileWidth=TilesDefinition.getType(0).imageData.width-1;tileHeight=TilesDefinition.getType(0).imageData.height/2-1;canvasTileWidth=Math.ceil(canvasWidth/tileWidth);canvasTileHeight=Math.ceil(canvasHeight/tileHeight);buildingsIndex=newMap.getBuildingsIndex();navigationIndex=newMap.getNavigationIndex();};this.setDisplayBuildableOverlay=function(displayBuildableOverlay){enableBuildOverlay=displayBuildableOverlay;};this.setDisplayNavigationIndex=function(displayNavigationIndex){enableNavigationIndex=displayNavigationIndex;};this.display=function(x,y){context.globalAlpha=0.3;displayLightSFX(x,y);enableBuildOverlay&&displayBuildableTiles(x,y);enableNavigationIndex&&displayNavigableTiles(x,y);context.globalAlpha=1;};displayLightSFX=function(x,y){var mapOffsetX,mapOffsetY,i,j,offsetX,offsetY,shiftX,endX,endY,mapRow,mapTile;y-=tileHeight;x-=tileWidth/2;mapOffsetX=Math.floor(x/tileWidth);mapOffsetY=Math.floor(y/tileHeight);for(j=canvasTileHeight+2;j--;){mapRow=map[j+mapOffsetY];if(!mapRow){continue;}
offsetY=(j+mapOffsetY)*tileHeight-y;shiftX=((mapOffsetY+j)%2)*tileWidth/2;for(i=canvasTileWidth+2;i--;){mapTile=mapRow[i+mapOffsetX];if(!mapTile||!mapTile.lightSfx){continue;}
offsetX=(i+mapOffsetX)*tileWidth+shiftX-x;endX=offsetX+(offsetX-canvasCenterX)/depthFactor;endY=offsetY+(offsetY-canvasCenterY)/depthFactor;context.lineWidth=mapTile.lightSfx;context.beginPath();context.moveTo(offsetX,offsetY);context.lineTo(endX,endY);context.stroke();}}};displayBuildableTiles=function(x,y){var mapOffsetX,mapOffsetY,i,j,mapRow,offsetY,shiftX,mapTile,offsetX;context.fillStyle=Settings.sfxBuildLayerColor;mapOffsetX=Math.floor(x/tileWidth)-1;mapOffsetY=Math.floor(y/tileHeight)-1;for(j=canvasTileHeight+2;j--;){mapRow=buildingsIndex[j+mapOffsetY];if(!mapRow){continue;}
offsetY=(j+mapOffsetY)*tileHeight-y;shiftX=((mapOffsetY+j)%2)*tileWidth/2;for(i=canvasTileWidth+2;i--;){mapTile=mapRow[i+mapOffsetX];if(!mapTile){continue;}
offsetX=(i+mapOffsetX)*tileWidth+shiftX-x;displayTileOverlay(offsetX,offsetY);}}};displayTileOverlay=function(x,y){context.beginPath();context.moveTo(x+(tileWidth/2),y);context.lineTo(x+tileWidth,y+tileHeight);context.lineTo(x+(tileWidth/2),y+(tileHeight*2));context.lineTo(x,y+tileHeight);context.fill();};displayNavigableTiles=function(x,y){var mapOffsetX,mapOffsetY,i,j,mapRow,offsetY,shiftX,mapTile,offsetX;mapOffsetX=Math.floor(x/tileWidth)-1;mapOffsetY=Math.floor(y/tileHeight)-1;for(j=canvasTileHeight+2;j--;){mapRow=navigationIndex[j+mapOffsetY];if(!mapRow){continue;}
offsetY=(j+mapOffsetY)*tileHeight-y;shiftX=((mapOffsetY+j)%2)*tileWidth/2;for(i=canvasTileWidth+2;i--;){mapTile=mapRow[i+mapOffsetX];context.fillStyle=mapTile?accessibleColor:inaccessibleColor;offsetX=(i+mapOffsetX)*tileWidth+shiftX-x;displayTileOverlay(offsetX,offsetY);}}};};"use strict";var MiniMap;MiniMap=function(){var tiles,container,buildingsLayer,unitsLayer,width,height,mapWidth,mapHeight,buildingsLayerCtx,unitsLayerCtx,xRatio,yRatio,tileWidth,tileHeight,changedTerrain,changedBuildings,changedUnits,drawTileLine,fill,buildingsLayerIndex,createIndex,xRatioC,yRatioC,initRenderer,renderUnitsLayer,renderBuildingsLayer,renderTerrainLayer,terrainLayer,terrainLayerCtx,map,instance,viewBordersLayer,viewBordersCtx,viewBordersWidth,viewBordersHeight,lastX,lastY,mainViewBufferWidth,mainViewBufferHeight;tiles=[];terrainLayer=document.createElement('canvas');terrainLayerCtx=terrainLayer.getContext('2d');buildingsLayer=document.createElement('canvas');buildingsLayerCtx=buildingsLayer.getContext('2d');unitsLayer=document.createElement('canvas');unitsLayerCtx=unitsLayer.getContext('2d');viewBordersLayer=document.createElement('canvas');viewBordersCtx=viewBordersLayer.getContext('2d');viewBordersCtx.lineCap='square';viewBordersCtx.lineJoin='bevel';changedTerrain=false;changedBuildings=false;changedUnits=false;instance=this;this.setMap=function(newMap){if(!(newMap instanceof Map)){throw new TypeError("An instance of the Map class is required");}
map=newMap;tiles=newMap.getTiles();mapHeight=tiles.length;mapWidth=tiles[0].length;if(container&&width){initRenderer();}};this.setMainViewSize=function(width,height){viewBordersWidth=width;viewBordersHeight=height;};this.setContainer=function(newContainer){if(!(newContainer instanceof HTMLElement)){throw new Error("container must be an HTML element");}
container=newContainer;width=container.offsetWidth;height=container.offsetHeight;terrainLayer.width=buildingsLayer.width=unitsLayer.width=viewBordersLayer.width=width;terrainLayer.height=buildingsLayer.height=unitsLayer.height=viewBordersLayer.height=height;newContainer=document.createElement('div');newContainer.style.height='0px';newContainer.appendChild(terrainLayer);container.appendChild(newContainer);newContainer=document.createElement('div');newContainer.style.height='0px';newContainer.appendChild(buildingsLayer);container.appendChild(newContainer);newContainer=document.createElement('div');newContainer.style.height='0px';newContainer.appendChild(unitsLayer);container.appendChild(newContainer);container.appendChild(viewBordersLayer);if(mapWidth&&width){initRenderer();}};this.setSize=function(newWidth,newHeight){width=newWidth;height=newHeight;terrainLayer.width=buildingsLayer.width=unitsLayer.width=viewBordersLayer.width=width;terrainLayer.height=buildingsLayer.height=unitsLayer.height=viewBordersLayer.height=height;if(map&&container){initRenderer();}};this.onBuildingChange=function(building){changedBuildings.push(building);};this.onUnitChange=function(unit){changedUnits.push(unit);};this.render=function(x,y){changedTerrain&&renderTerrainLayer();changedBuildings.length&&renderBuildingsLayer();changedUnits.length&&renderUnitsLayer();if((x!==lastX)||(y!==lastY)){lastX=x;lastY=y;x=Math.round(x/mainViewBufferWidth*width);y=Math.round(y/mainViewBufferHeight*height);viewBordersCtx.strokeStyle='white';viewBordersCtx.lineWidth=Math.round((tileWidth+tileHeight)/2);viewBordersCtx.clearRect(0,0,viewBordersLayer.width,viewBordersLayer.height);viewBordersCtx.strokeRect(x,y,viewBordersWidth*xRatio,viewBordersHeight*yRatio*2);}};this.setMainViewBufferSize=function(dimensions){mainViewBufferWidth=dimensions.width;mainViewBufferHeight=dimensions.height;};renderUnitsLayer=function(){var i,unit;for(i=changedUnits.length;i--;){unit=changedUnits[i];unitsLayerCtx.fillStyle=unit.color;switch(unit.action){case 2:unitsLayerCtx.globalCompositeOperation='destination-out';unitsLayerCtx.fillRect(unit.lastX*xRatio,unit.lastY*yRatio,xRatioC,yRatioC);case 0:unitsLayerCtx.globalCompositeOperation='source-over';unitsLayerCtx.fillRect(unit.x*xRatio,unit.y*yRatio,xRatioC,yRatioC);break;case 1:unitsLayerCtx.globalCompositeOperation='destination-out';unitsLayerCtx.fillRect(unit.x*xRatio,unit.y*yRatio,xRatioC,yRatioC);break;}}
changedUnits=[];};renderBuildingsLayer=function(){var i,building,x1,y1,x2,y2,x3,y3,x4,y4;for(i=changedBuildings.length;i--;){building=changedBuildings[i];buildingsLayerCtx.globalCompositeOperation=building.type===false?'destination-out':'source-over';x1=building.x;y1=building.y;x2=x1+building.width;y2=y1+Math.floor(building.width/2);x3=x1-Math.floor(building.height/2);y3=y1+building.height;x4=x3+building.width;y4=y3+Math.floor(building.width/2);buildingsLayerCtx.fillStyle=building.color;drawTileLine(x1,y1,x2,y2,buildingsLayerCtx);drawTileLine(x1,y1,x3,y3,buildingsLayerCtx);drawTileLine(x2,y2,x4,y4,buildingsLayerCtx);drawTileLine(x3,y3,x4,y4,buildingsLayerCtx);fill(Math.round((x1+x4)/2),Math.round((y1+y4)/2),buildingsLayerCtx);}
changedBuildings=[];};renderTerrainLayer=function(){var i,j,row;for(i=tiles.length;i--;){row=tiles[i];for(j=row.length;j--;){terrainLayerCtx.fillStyle=row[j].minimap;terrainLayerCtx.fillRect(xRatio*j,yRatio*i,tileWidth,tileHeight);}}
changedTerrain=false;};createIndex=function(){var index,i,j;index=new Array(mapWidth);for(i=mapWidth;i--;){index[i]=new Array(mapHeight);for(j=mapHeight;j--;){index[i][j]=false;}}
return index;};fill=function(x,y,ctx,fillColor){var thisColor;if((x>=mapWidth)||(x<0)||(y>=mapHeight)||(y<0)){return;}
thisColor=buildingsLayerIndex[x][y];if(fillColor===undefined){fillColor=thisColor;}
if(thisColor==fillColor){ctx.fillRect(x*xRatio,y*yRatio,xRatioC,yRatioC);buildingsLayerIndex[x][y]=!buildingsLayerIndex[x][y];fill(x-1,y,ctx,fillColor);fill(x+1,y,ctx,fillColor);fill(x,y-1,ctx,fillColor);fill(x,y+1,ctx,fillColor);}};drawTileLine=function(x1,y1,x2,y2,ctx){var len,vx,vy,rx,ry;vx=x2-x1;vy=y2-y1;len=Math.sqrt(vx*vx+vy*vy);vx/=len;vy/=len;ctx.fillRect(xRatio*Math.round(x1),yRatio*Math.round(y1),xRatioC,yRatioC);do{x1+=vx;y1+=vy;rx=Math.round(x1);ry=Math.round(y1);if(buildingsLayerIndex[rx]&&(buildingsLayerIndex[rx][ry]!==undefined)){buildingsLayerIndex[rx][ry]=true;ctx.fillRect(xRatio*rx,yRatio*ry,xRatioC,yRatioC);}}while((Math.round(x1)!=x2)&&(Math.round(y1)!=y2))};initRenderer=function(){var i;xRatio=width/mapWidth;yRatio=height/mapHeight;xRatioC=Math.ceil(xRatio);yRatioC=Math.ceil(yRatio);tileWidth=Math.ceil(xRatio);tileHeight=Math.ceil(yRatio);changedTerrain=true;changedBuildings=[];changedUnits=[];buildingsLayerIndex=createIndex();for(i=map.getBuildings().length;i--;){instance.onBuildingChange(map.getBuildings()[i]);}
for(i=map.getUnits().length;i--;){instance.onUnitChange(map.getUnits()[i]);}};};"use strict";var MainView;MainView=function(){var terrainLayer,buildingsLayer,unitsLayer,sfxLayer;this.setCanvas=function(viewCanvas){terrainLayer=new TerrainLayer();terrainLayer.setCanvas(viewCanvas);buildingsLayer=new BuildingsLayer();buildingsLayer.setCanvas(viewCanvas);unitsLayer=new UnitsLayer();unitsLayer.setCanvas(viewCanvas);sfxLayer=new SFX();sfxLayer.setCanvas(viewCanvas);};this.setMap=function(map){if(!terrainLayer){throw new Error('Cannot set map before canvas');}
terrainLayer.setMap(map.getMap());buildingsLayer.setMap(map);unitsLayer.setMap(map);sfxLayer.setMap(map);terrainLayer.init();};this.display=function(x,y){terrainLayer.display(x,y);buildingsLayer.display(x,y);unitsLayer.display(x,y);sfxLayer.display(x,y);};this.onBuildingChange=function(building){if(building.type===false){buildingsLayer.onBuildingRemoved(building);}else{buildingsLayer.onBuildingAdded(building);}};this.onUnitChange=function(unit){unitsLayer.onUnitChange(unit);};this.getLayersDimensions=function(){if(!terrainLayer){throw new Error('Layers has not been initialized yet');}
return terrainLayer.getBufferDimensions();};};"use strict";var BuildingsLayer;BuildingsLayer=function(){var buffer,canvas,canvasWidth,canvasHeight,canvasContext,bufferWidth,bufferHeight,tileWidth,tileHeight,bufferCanvas;this.setCanvas=function(newCanvas){canvas=newCanvas;canvasWidth=canvas.width;canvasHeight=canvas.height;canvasContext=canvas.getContext('2d');};this.getBufferDimensions=function(){return{width:bufferWidth,height:bufferHeight};};this.setMap=function(map){var buildings,i;tileWidth=TilesDefinition.getType(0).imageData.width;tileHeight=TilesDefinition.getType(0).imageData.height;tileHeight/=2;tileWidth-=1;tileHeight-=1;bufferWidth=map.getMap()[0].length*tileWidth+tileWidth/2;bufferHeight=map.getMap().length*tileHeight+tileHeight;bufferCanvas=document.createElement('canvas');bufferCanvas.width=bufferWidth;bufferCanvas.height=bufferHeight;buffer=bufferCanvas.getContext('2d');buildings=map.getBuildings();for(i=buildings.length;i--;){this.onBuildingAdded(buildings[i]);}};this.onBuildingAdded=function(building){var type,x,y;type=BuildingsDefinition.getType(building.type);x=(tileWidth/2)*(building.y%2)+tileWidth*building.x;y=tileHeight*building.y;buffer.globalCompositeOperation='source-over';buffer.drawImage(type.playerImages[building.player],x,y-2);};this.onBuildingRemoved=function(building){var type,x,y;type=BuildingsDefinition.getType(building.type);x=(tileWidth/2)*(building.y%2)+tileWidth*building.x;y=tileHeight*building.y;buffer.globalCompositeOperation='destination-out';buffer.drawImage(type.imageData,x,y-2);};this.display=function(x,y){canvasContext.drawImage(bufferCanvas,-x,-y);};};"use strict";var MouseGestures;MouseGestures=function(directionGranularity,ignoreDuplicates,minDistance,mouseButton){var previousX,previousY,active,computeDirection,lastDirection,gesture,listeners,executeListeners,gestures;active=false;listeners=[];gestures={};this.addListener=function(listener){listeners.push(listener);};this.addGestureListener=function(gesture,listener){if(!gestures[gesture]){gestures[gesture]=[];}
gestures[gesture].push(listener);};this.addListener(function(gesture){var i,listeners;listeners=gestures[gesture.join('')];if(listeners){for(i=listeners.length;i--;){listeners[i]();}}});computeDirection=function(x,y){var max,absX,absY;absX=Math.abs(x);absY=Math.abs(y);max=Math.max(absX,absY);x/=max;y/=max;if(directionGranularity==4){if(absX>absY){return x>0?1:3;}
return y>0?2:0;}
if(absX/2>absY){return x>0?2:6;}
if(absX>absY/2){return x>0?(y>0?3:1):(y>0?5:7);}
return y>0?4:0;};executeListeners=function(gesture){var i;for(i=listeners.length;i--;){listeners[i](gesture);}};addEventListener('mousedown',function(e){if(mouseButton==e.button){e.preventDefault();e.stopPropagation();active=true;previousX=undefined;lastDirection=undefined;gesture=[];}},false);if(mouseButton==2){addEventListener('contextmenu',function(e){e.preventDefault();});}
addEventListener('mouseup',function(){if(active){active=false;executeListeners(gesture);}});addEventListener('mousemove',function(e){var direction,distance,distanceX,distanceY;if(previousX&&active){distanceX=e.pageX-previousX;distanceY=e.pageY-previousY;distance=Math.sqrt(Math.pow(distanceX,2)+
Math.pow(distanceY,2));if(distance<minDistance){return;}
direction=computeDirection(distanceX,distanceY);if(ignoreDuplicates&&(lastDirection==direction)){return;}
lastDirection=direction;gesture.push(direction);previousX=undefined;return;}
previousX=e.pageX;previousY=e.pageY;},false);};"use strict";var Mouse;Mouse=function(){var x,y,mapX,mapY,canvasLeftOffset,canvasTopOffset,tileWidth,tileHeight,tileWidthHalf,mapXOffset,mapYOffset;tileWidth=TilesDefinition.getType(0).imageData.width-1;tileHeight=TilesDefinition.getType(0).imageData.height/2-1;tileWidthHalf=tileWidth/2;mapXOffset=0;mapYOffset=0;this.getX=function(){return x;};this.getY=function(){return y;};this.getMapX=function(){return mapX;};this.getMapY=function(){return mapY;};this.setCanvasOffset=function(left,top){canvasLeftOffset=left;canvasTopOffset=top;};this.setMapOffset=function(x,y){mapXOffset=x;mapYOffset=y;};addEventListener('mousemove',function(e){var xShift,yShift;x=e.pageX-canvasLeftOffset+mapXOffset;y=e.pageY-canvasTopOffset+mapYOffset;mapX=Math.floor(x/tileWidth);mapY=Math.floor(y/tileHeight);xShift=x-mapX*tileWidth;yShift=y-mapY*tileHeight;if(mapY%2){if(xShift>=tileWidthHalf){xShift-=tileWidthHalf;mapY-=(xShift+yShift<tileWidthHalf)?1:0;}else{if(tileWidthHalf-xShift+yShift<tileWidthHalf){mapY--;}else{mapX--;}}}else{if(xShift>=tileWidthHalf){xShift-=tileWidthHalf;mapY-=(tileWidthHalf-xShift+yShift<tileWidthHalf)?1:0;}else{if(xShift+yShift<tileWidthHalf){mapX--;mapY--;}}}},false);};"use strict";var Storage={persist:function(name,data){localStorage.setItem(name,JSON.stringify(data));window[name]=data;},get:function(name){return JSON.parse(localStorage.getItem(name));},getKeys:function(){var keys,i;keys=[];for(i=localStorage.length;i--;){keys.push(localStorage.key(i));}
return keys;},remove:function(name){localStorage.removeItem(name);},clear:function(){localStorage.clear();}};(function(){var keys,i;keys=Storage.getKeys();for(i=keys.length;i--;){window[keys[i]]=Storage.get(keys[i]);}
addEventListener('beforeunload',function(){keys=Storage.getKeys();for(i=keys.length;i--;){if(window[keys[i]]===undefined){Storage.remove(keys[i])}else{Storage.persist(keys[i],window[keys[i]]);}}},false);}());"use strict";var MapCompressor;MapCompressor=function(){var compressLevel1,compressLevel2,compressLevel1Buildings,compressLevel3,decompressLevel1,decompressLevel2,decompressLevel3,spliceTiles,decompressLevel1Tiles;this.compress=function(map,level){(level>0)&&(map=compressLevel1(map));(level>1)&&(map=compressLevel2(map));(level>2)&&(map=compressLevel3(map));return map;};this.decompress=function(map,level){(level>2)&&(map=decompressLevel3(map));(level>1)&&(map=decompressLevel2(map));(level>0)&&(map=decompressLevel1(map));return map;};decompressLevel1=function(map){var tiles,i,buildings,units;tiles=decompressLevel1Tiles(map);buildings=map.buildings;buildings.reverse();for(i=buildings.length;i--;){buildings[i]={x:buildings[i].x,y:buildings[i].y,type:buildings[i].t,player:buildings[i].p};}
units=map.units;units.reverse();for(i=units.length;i--;){units[i]={x:units[i].x,y:units[i].y,direction:units[i].d,type:units[i].t,player:units[i].p};}
return{tiles:tiles,buildings:buildings,units:units};};decompressLevel1Tiles=function(map){var tiles,row,i,j;tiles=spliceTiles(map.tiles,map.width);for(i=tiles.length;i--;){row=tiles[i];row.reverse();for(j=row.length;j--;){row[j]={type:row[j].t,lightSfx:row[j].l};}}
return tiles;};spliceTiles=function(tiles,cols){var rows;rows=[];while(tiles.length){rows.push(tiles.splice(0,cols));}
rows.reverse();return rows;};decompressLevel2=function(map){var i,tiles,mapTiles,buildings,mapBuildings,units,mapUnits;tiles=map.tiles;mapTiles=[];for(i=tiles.length;i--;){mapTiles.push({t:parseInt(tiles[i][0],10),l:parseInt(tiles[i][1],10)});}
buildings=map.buildings;mapBuildings=[];for(i=buildings.length;i--;){mapBuildings.push({x:parseInt(buildings[i][0],10),y:parseInt(buildings[i][1],10),t:parseInt(buildings[i][2],10),p:parseInt(buildings[i][3],10)});}
units=map.units;mapUnits=[];for(i=units.length;i--;){mapUnits.push({x:parseInt(units[i][0],10),y:parseInt(units[i][1],10),d:parseInt(units[i][2],10),t:parseInt(units[i][3],10),p:parseInt(units[i][4],10)});}
return{width:map.width,height:map.height,tiles:mapTiles,buildings:mapBuildings,units:mapUnits};};decompressLevel3=function(map){var tiles,buildings,units,i;map=map.split('|');tiles=map[2].split('-');buildings=map[3]?map[3].split('-'):[];units=map[4]?map[4].split('-'):[];for(i=tiles.length;i--;){tiles[i]=tiles[i].split(',');}
for(i=buildings.length;i--;){buildings[i]=buildings[i].split(',');}
for(i=units.length;i--;){units[i]=units[i].split(',');}
return{width:parseInt(map[0],10),height:parseInt(map[1],10),tiles:tiles,buildings:buildings,units:units};};compressLevel3=function(map){var tiles,buildings,units,i;tiles=map.tiles;for(i=tiles.length;i--;){tiles[i]=tiles[i].join(',');}
buildings=map.buildings;for(i=buildings.length;i--;){buildings[i]=buildings[i].join(',');}
units=map.units;for(i=units.length;i--;){units[i]=units[i].join(',');}
return[map.width,map.height,tiles.join('-'),buildings.join('-'),units.join('-')].join('|');};compressLevel2=function(map){var tiles,mapTiles,buildings,mapBuildings,units,mapUnits,i;tiles=[];mapTiles=map.tiles;for(i=mapTiles.length;i--;){tiles.push([mapTiles[i].t,mapTiles[i].l]);}
buildings=[];mapBuildings=map.buildings;for(i=mapBuildings.length;i--;){buildings.push([mapBuildings[i].x,mapBuildings[i].y,mapBuildings[i].t,mapBuildings[i].p]);}
units=[];mapUnits=map.units;for(i=mapUnits.length;i--;){units.push([mapUnits[i].x,mapUnits[i].y,mapUnits[i].d,mapUnits[i].t,mapUnits[i].p]);}
return{width:map.width,height:map.height,tiles:tiles,buildings:buildings,units:units};};compressLevel1=function(map){var rowCount,colCount,mapTiles,mapTilesRow,tiles,i,j,buildings,units,mapUnits;mapTiles=map.tiles;rowCount=mapTiles.length;colCount=mapTiles[0].length;tiles=[];for(j=rowCount;j--;){mapTilesRow=mapTiles[j];for(i=colCount;i--;){tiles.push({t:mapTilesRow[i].type,l:mapTilesRow[i].lightSfx});}}
buildings=compressLevel1Buildings(map.buildings);mapUnits=map.units;units=[];for(i=mapUnits.length;i--;){units.push({x:mapUnits[i].x,y:mapUnits[i].y,d:mapUnits[i].direction,t:mapUnits[i].type,p:mapUnits[i].player});}
return{width:colCount,height:rowCount,tiles:tiles,buildings:buildings,units:units};};compressLevel1Buildings=function(mapBuildings){var buildings,i;buildings=[];for(i=mapBuildings.length;i--;){buildings.push({x:mapBuildings[i].x,y:mapBuildings[i].y,t:mapBuildings[i].type,p:mapBuildings[i].player});}
return buildings;};};"use strict";var LZW;LZW=function(){this.encode=function(string){var dictionary,data,output,character,phrase,code,i,length;dictionary={};data=string.split('');output=[];phrase=data[0];code=256;length=data.length;for(i=1;i<length;i++){character=data[i];if(dictionary[phrase+character]){phrase+=character;}else{output.push(phrase.length>1?dictionary[phrase]:phrase.charCodeAt(0));dictionary[phrase+character]=code++;phrase=character;}}
output.push(phrase.length>1?dictionary[phrase]:phrase.charCodeAt(0));for(i=length;i--;){output[i]=String.fromCharCode(output[i]);}
return output.join('');};this.decode=function(string){var dictionary,data,character,oldPhrase,output,code,phrase,i,length,charCode;dictionary={};data=string.split('');character=data[0];oldPhrase=character;output=[character];code=256;length=data.length;for(i=1;i<length;i++){charCode=data[i].charCodeAt(0);if(charCode<256){phrase=data[i];}else{phrase=dictionary[charCode]||(oldPhrase+character);}
output.push(phrase);character=phrase.charAt(0);dictionary[code++]=oldPhrase+character;oldPhrase=phrase;}
return output.join('');};};"use strict";var Base64;Base64=function(){var keyString;keyString='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'+'0123456789+/=';this.encode=function(input){var output,chr1,chr2,chr3,enc1,enc2,enc3,enc4,i;input=escape(input);output='';i=0;do{chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=((chr1&3)<<4)|(chr2>>4);enc3=((chr2&15)<<2)|(chr3>>6);enc4=chr3&63;isNaN(chr2)&&(enc3=enc4=64);isNaN(chr3)&&(enc4=64);output+=keyString.charAt(enc1)+keyString.charAt(enc2)+
keyString.charAt(enc3)+keyString.charAt(enc4);}while(i<input.length);return output;};this.decode=function(input){var output,chr1,chr2,chr3,enc1,enc2,enc3,enc4,i;i=0;output='';do{enc1=keyString.indexOf(input.charAt(i++));enc2=keyString.indexOf(input.charAt(i++));enc3=keyString.indexOf(input.charAt(i++));enc4=keyString.indexOf(input.charAt(i++));chr1=(enc1<<2)|(enc2>>4);chr2=((enc2&15)<<4)|(enc3>>2);chr3=((enc3&3)<<6)|enc4;output+=String.fromCharCode(chr1);(enc3!=64)&&(output+=String.fromCharCode(chr2));(enc4!=64)&&(output+=String.fromCharCode(chr3));}while(i<input.length);return unescape(output);};};